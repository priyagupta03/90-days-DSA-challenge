Question:Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays.
A subarray is a contiguous subsequence of the array.
Return the sum of all odd-length subarrays of arr.

Solution1:
class Solution:
    def sumOddLengthSubarrays(self, arr: List[int]) -> int:
        length = len(arr)
        ans = 0        
        for i in range(length) :
            ans += ((i+1)*(length-i)+1)//2 * arr[i]
        return ans

Solution2:
ans=0
        for i in range(len(arr)+1):
            for j in range(i):
                if len(arr[j:i])%2!=0:
                    ans+=sum(arr[j:i])
        return ans
        


Question: Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Solution:
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        c=0
        m=0
        for i in range(len(nums)):
            if nums[i] == 0:
                c=c+1
                m=m+1
                
        while c!=0:
            nums.remove(0)
            c=c-1
            
        while m!=0:
            nums.append('0')
            m=m-1
            
Solution:
temp=[] #storing elements in temporary array
    for i in range(len(nums)):
        if nums[i]!=0:
            temp.append(nums[i])
    
    for i in range(len(nums)):
        if nums[i]==0:
            temp.append(nums[i])
    
    for i in range(len(nums)):
        nums[i]=temp[i]
        
        
        
Q3: Richest customer wealth
You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer has. 
A customer's wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth.
Sol1:
Sum = 0
        for i in  range(0, len(accounts)):
            Sum1 = sum(accounts[i])
            if Sum1 > Sum:
                Sum = Sum1
        return Sum
        
Sol2:
arr = [sum(accounts[i]) for i in range(0,len(accounts))]
        return max(arr)
